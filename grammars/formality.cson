'fileTypes' : [
  'fm'
]
'name' : 'Formality-Core'
'patterns' : [
  {
    'include' : '#main'
  }
]
'scopeName' : 'source.fm'
'uuid' : ''
'repository' : {
  'main' : {
    'patterns' : [
      {
        'include' : '#keyword'
      }
      {
        'include' : '#punctuations'
      }
      {
        'include' : '#numeric'
      }
      {
        'match' : '(\\bT\\s.*:)'
        'name' : 'meta.function.fm'
      }
      {
        'match' : '(\\blet\\s|\\bdup\\s|\\bcpy\\s|\\bget\\s|\\bsnd\\s|\\bfst\\s)'
        'name' : 'storage.type.fm'
      }
      {
        'match' : '(\\blet\\s|\\bdup\\s|\\bcpy\\s|\\bget\\s|\\bsnd\\s|\\bfst\\s)'
        'name' : 'variable.language.fm'
      }
      {
        'begin' : '(\\")'
        'beginCaptures' : {
          '1' : {
            'name' : 'string.quoted.double.fm'
          }
        }
        'contentName' : 'string.quoted.double.fm'
        'end' : '(\\")'
      }
      {
        'match' : '(//.*)'
        'name' : 'comment.line.double-slash.fm'
      }
    ]
  }
  'keyword' : {
    'patterns' : [
      {
        'match' : '(\\bT\\s)'
        'name' : 'keyword.fm'
      }
      {
        'match' : '(<=|>=|===|<|>|!==|&)'
        'name' : 'keyword.operator.logical.fm'
      }
      {
        'match' : '(-|\\+|\\*|\\%|(\\w|\\s)/(\\w|\\s))'
        'name' : 'keyword.operator.arithmetic.fm'
      }
      {
        'match' : '(\\bif\\s|\\bthen[\\s\\x{007c}\\:]|\\belse[\\s\\x{007c}\\:])'
        'name' : 'keyword.conditional.fm'
      }
    ]
  }
  'main__1' : {
    'patterns' : [
    ]
  }
  'numeric' : {
    'patterns' : [
      {
        'match' : '(\\b[01]+\\b)'
        'name' : 'constant.numeric.integer.binary.fm'
      }
      {
        'match' : '(^0[0-7]+$)'
        'name' : 'constant.numeric.integer.octal.fm'
      }
      {
        'match' : '(^[\\d.]+$)'
        'name' : 'constant.numeric.integer.decimal.fm'
      }
      {
        'match' : '(0[a-z\\x\\x{007b}007c\\x{007d}A-Z][0-9a-fA-F]+)'
        'name' : 'constant.numeric.integer.hexadecimal.fm'
      }
      {
        'match' : '(\\b[\\x\\x{007b}002b\\x{007d}-]?([0-9]*[.])?[0-9]+)'
        'name' : 'constant.numeric.float.fm'
      }
    ]
  }
  'punctuations' : {
    'patterns' : [
      {
        'match' : '(#|~)'
        'name' : 'punctuation.definition.variable.fm'
      }
      {
        'match' : '(:|\s=\s|!|=>|->)'
        'name' : 'punctuation.definition.variable.fm'
      }
      {
        'match' : '(\\[|\\]|\\{|\\}|\\(|\\)|\\|)'
        'name' : 'punctuation.fm'
      }
    ]
  }
}